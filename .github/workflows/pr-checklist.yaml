name: PR Checklist Validator

on:
  pull_request_target:
    types:
      - opened
      - reopened
      - edited

permissions:
  issues: write
  pull-requests: write

jobs:
  checklist:
    runs-on: ubuntu-latest
    steps:
      - name: Validate Checklist
        uses: actions/github-script@v7
        with:
          script: |
            const prAuthor = context.payload.pull_request.user.login;

            if (context.payload.pull_request.user.type === 'Bot') {
              return;
            }

            const response = await fetch(`https://raw.githubusercontent.com/ohcnetwork/leaderboard-data/main/contributors/${prAuthor}.md`);
            if (response.ok) {
              const userData = await response.text();
              if (userData.includes('role: core')) return;
            }

            const prBody = context.payload.pull_request.body || '';

            const checklist = [
              'Add specs that demonstrate the bug or test the new feature.',
              'Update \\[product documentation\\]\\(https://docs\\.ohc\\.network\\)\\.',
              'Ensure that UI text is placed in I18n files.',
              'Prepare a screenshot or demo video for the changelog entry and attach it to the issue.',
              'Request peer reviews.',
              'Complete QA on mobile devices.',
              'Complete QA on desktop devices.'
            ];

            const checked = checklist.filter(item => {
              const pattern = new RegExp(`-\\s*\\[\\s*[xX]\\s*\\]\\s*${item}`, 'i');
              return pattern.test(prBody);
            });

            const prState = context.payload.pull_request.state;

            if (checked.length > 0 && prState === 'open') {
              return;
            }

            if (checked.length === 0 && prState === 'open') {
              const commentBody = [
                'This PR has been automatically closed because the merge checklist was not completed.',
                '',
                'To fix this:',
                'Mark the checklist items in your PR body by changing `- [ ]` to `- [x]` (make sure to only check relevant items).',
                '',
                'Once updated, the PR will reopen automatically.'
              ].join('\n');

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: commentBody
              });

              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                state: 'closed'
              });

              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: ['auto-closed-checklist']
              });

              core.setFailed('Checklist incomplete. PR closed.');
            } 
            else if (checked.length > 0 && prState === 'closed') {

              const { data: labels } = await github.rest.issues.listLabelsOnIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number
              });

              const wasAutoClosed = labels.some(l => l.name === 'auto-closed-checklist');
              if (!wasAutoClosed) {
                  console.log('PR was manually closed â€” skipping reopen.');
                  return;
              }

              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                name: 'auto-closed-checklist'
              });

              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                state: 'open'
              });
            }